{
	"info": {
		"_postman_id": "98348237-76ef-4385-bf8f-afc7a1514ba1",
		"name": "server Copy 3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23154557"
	},
	"item": [
		{
			"name": "Create",
			"item": [
				{
					"name": "/api/users/register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"felix.valkama1323456789@proton.me\",\r\n    \"username\": \"tww\",\r\n    \"password\": \"12345678\",\r\n    \"passwordCheck\": \"12345678\",\r\n    \"preference\": [\"cocktail\", \"mocktail\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/register",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/users/refresh-token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "refreshToken",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NjU4MzU3MTMsImV4cCI6MTY2ODUxNDExMywiYXVkIjoiNjM0MmI1ZTQ5NDcxMjE4YWMwMThjNWYxIn0.K7Y09oCHbNG2t9CHZsmXoe6ZzQ1Myf0ClJvx8oSr-Bg",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NjU4NDc5OTUsImV4cCI6MTY2NTg0ODAyNSwiYXVkIjoiNjM0MmI1ZTQ5NDcxMjE4YWMwMThjNWYxIn0.LnbijJw5mzXzXYPRCoIT4VcqAQj_5hGkPSEFqtWybIo",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NjM2OTgxNjUsImV4cCI6MTY2MzY5ODE5NSwiYXVkIjoiNjMyYTAyOWE1NzNjOWY1MzEwMTJlNWU5In0.GB4rF0kHxuDR9QvumFF40pPq8G2vFCY-rXAf7ZxS51E\",\r\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NjM2OTgxNjUsImV4cCI6MTY2NjM3NjU2NSwiYXVkIjoiNjMyYTAyOWE1NzNjOWY1MzEwMTJlNWU5In0.hQ8GbJylf829421OibIsW_k10Cn4W75BeZHpyJarLVM\",\r\n    \"user\": {\r\n        \"id\": \"632a029a573c9f531012e5e9\",\r\n        \"username\": \"tww\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/refresh-token",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"refresh-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/users/login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"user can log in\", function() {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"userId\", jsonData.userId);\r",
									"    pm.environment.set(\"token\", jsonData.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NjYxMDE3MjQsImV4cCI6MTY2NjEwMTc1NCwiYXVkIjoiNjM0YzQxM2U4OTE5ODUyNDhjYWE1MmFjIn0.wYdjuKNtFOkOm6bIn6GVjLFul_57aPKVsPTdkCbFPkg",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"felix.valkama1323456789@proton.me\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var barId = jsonData._id",
									"pm.environment.set(\"bar_id\", barId);",
									"",
									"var getBarID = pm.variables.get(\"bar_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bar_name\": \"dadadadadada1dad1adadad\",\r\n    \"adress\": \"Nordhemadadan 1\",\r\n    \"openingHours\": \"17:00 - 02:00\",\r\n    \"bar_description\": \"Somadad or the other\",\r\n    \"bar_category\": \"Rock\"\r\n}\r\n    ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/bars/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ingredient",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Validating schema",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const schema = {",
									"      \"ingredient_name\": {type: String, unique: true, required: true}",
									"};",
									"const data1 = [true, false];",
									"const data2 = [true, 123];",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(data1, schema)).to.be.true;",
									"  pm.expect(tv4.validate(data2, schema)).to.be.true;",
									"});",
									"",
									"//saving response in enviornment variable",
									"var jsonData = pm.response.json();",
									"var ingredientId = jsonData._id",
									"pm.environment.set(\"ingredient_id\", ingredientId);",
									"",
									"var getIngredientId = pm.variables.get(\"ingredient_id\");",
									"",
									"",
									"pm.test(\"Name is included in body as a string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ingredient_name\": \"nytt\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/ingredients",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Cocktails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"var cocktailId = jsonData._id\r",
									"pm.environment.set(\"cocktail_id\", cocktailId);\r",
									"\r",
									"var getCocktailId = pm.variables.get(\"cocktail_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "g eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NjYxMDE5NjAsImV4cCI6MTY2NjEwMTk5MCwiYXVkIjoiNjM0YzQxM2U4OTE5ODUyNDhjYWE1MmFjIn0.0-Bm3ID7zfwDgFCP8i5S2RO-vPzlrnyOEg2hFPDRLaw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cocktail_name\": \"sfsfsfdsf\",\r\n    \"glass\": \"Martini Glass\",\r\n    \"ingredients\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cocktails/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cocktails",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Cocktails with Ingredient",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ingredients\": [\r\n        {\r\n            \"_id\": \"634416af754abba9d1965d36\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cocktails/{{cocktail_id}}/ingredients",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cocktails",
								"{{cocktail_id}}",
								"ingredients"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Read",
			"item": [
				{
					"name": "/api/users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/users/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/users/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all ingredients",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var ingredient = jsonData.ingredients.ingredient_name;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Should not return an error\", function () {",
									"    pm.response.to.not.be.error;",
									"});",
									"",
									"pm.test(\"Check type\", () => {",
									"    _.each(pm.response.json().response, (ingredient) => { ",
									"        pm.expect(typeof ingredient[\"ingredient_name\"]).to.be.string;",
									"    })",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/ingredients",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get only bar names",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/onlynames",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"onlynames"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific ingredient in cocktail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cocktails/{{cocktail_id}}/ingredients/{{ingredient_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cocktails",
								"{{cocktail_id}}",
								"ingredients",
								"{{ingredient_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ingredients in a cocktail",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cocktails/{{cocktail_id}}/ingredients",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cocktails",
								"{{cocktail_id}}",
								"ingredients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ingredient with specific ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var ingredient_name = jsonData.ingredient_name;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"Check type\", () => {",
									"    _.each(pm.response.json().response, (ingredient) => { ",
									"        pm.expect(typeof ingredient[\"ingredient_name\"]).to.be.string;",
									"    })",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/ingredients/{{ingredient_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients",
								"{{ingredient_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cocktail with ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var ingredient_name = jsonData.ingredient_name;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"Check type\", () => {",
									"    _.each(pm.response.json().response, (ingredient) => { ",
									"        pm.expect(typeof ingredient[\"ingredient_name\"]).to.be.string;",
									"    })",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/ingredients/{{ingredient_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients",
								"{{ingredient_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all cocktails",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cocktails",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cocktails"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update",
			"item": [
				{
					"name": "Update cocktail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NjYxMDE4ODIsImV4cCI6MTY2NjEwMTkxMiwiYXVkIjoiNjM0YzQxM2U4OTE5ODUyNDhjYWE1MmFjIn0.zf9b8KCqj0nba6rGGTS06rKMiPIT8kqTx_acDAc4kac",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n        {\r\n            \"_id\": \"6321fa94360833132861fd52\",\r\n            \"cocktail_name\": \"Mimosa\",\r\n            \"glass\": \"Martini Glass\",\r\n            \"ingredients\": [\r\n                {\r\n                    \"_id\": \"6321f928f797723100a5de8a\"\r\n                },\r\n                {\r\n                    \"_id\": \"6321f92ff797723100a5de8c\"\r\n                }\r\n            ],\r\n            \"__v\": 0\r\n        }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cocktails/{{cocktail_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cocktails",
								"{{cocktail_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/users/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "refreshToken",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzMjVjMjMxOTA1OGMzODM4OGY5MTk0MyIsImlhdCI6MTY2MzQ5NTQ3NSwiZXhwIjoxNjYzNDk1NDc1fQ.LIwdsro1Pwrt06yXc84ucFlXGdZ_TP5zj4XkuSTbs94",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"12345678\",\r\n    \"passwordCheck\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Partially update ingredient with ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ingredient_name\": \"ajajaj\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/ingredients/{{ingredient_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients",
								"{{ingredient_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update ingredient with ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ingredient_name\": \"Vodka\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/ingredients/{{ingredient_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients",
								"{{ingredient_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update bar with ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bar_name\": \"Brewdog\",\n    \"adress\": \"Esperantoplatsen 5\",\n    \"openingHours\": \"17:00 - 02:00\",\n    \"bar_description\": \"Beer bar with food\",\n    \"bar_category\": \"Rock\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/bars/{{bar_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{bar_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cocktail with ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cocktail_name\": \"GT\",\n  \"cocktail_glass\": \"Any\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cocktails/{{cocktail_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cocktails",
								"{{cocktail_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Delete ingredient with specific ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{host}}/api/ingredients/{{ingredient_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients",
								"{{ingredient_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete cocktail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/cocktails/{{cocktail_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cocktails",
								"{{cocktail_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete bar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/bars/{{bar_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"bars",
								"{{bar_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all ingredients",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/ingredients",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"ingredients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all Cocktails",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/cocktails",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"cocktails"
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/users/:id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/users/:id",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/api/users/logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}